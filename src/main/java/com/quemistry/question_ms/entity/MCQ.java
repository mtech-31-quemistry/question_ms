package com.quemistry.question_ms.entity;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDocument;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMappingException;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverter;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.io.IOException;
import java.util.Date;
import java.util.List;

@Data
@NoArgsConstructor
@AllArgsConstructor
@DynamoDBTable(tableName = "MCQ")
public class MCQ {

    @DynamoDBHashKey(attributeName = "id")
    @DynamoDBAutoGeneratedKey
    private String id;

    @DynamoDBAttribute
    private String stem;

    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = OptionListConverter.class)
    private List<Option> options;

    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = Topic.TopicListConverter.class)
    private List<Topic> topics;

    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = Skill.SkillListConverter.class)
    private List<Skill> skills;

    @DynamoDBAttribute
    private String status;

    @DynamoDBAttribute
    private Date publishedOn;

    @DynamoDBAttribute
    private String publishedBy;

    @DynamoDBAttribute
    private Date closedOn;

    @DynamoDBAttribute
    private String closedBy;

    @DynamoDBAttribute
    private Date createdOn;

    @DynamoDBAttribute
    private String createdBy;

    @Data
    @NoArgsConstructor
    @AllArgsConstructor
    @Builder
    @DynamoDBDocument
    public static class Option {
        @DynamoDBAttribute(attributeName = "no")
        private Integer no;

        @DynamoDBAttribute(attributeName = "text")
        private String text;

        @DynamoDBAttribute(attributeName = "explanation")
        private String explanation;

        @DynamoDBAttribute(attributeName = "isAnswer")
        private Boolean isAnswer;
    }

    // DynamoDB Type Converter for List<Option>
    public static class OptionListConverter implements DynamoDBTypeConverter<String, List<Option>> {

        private final ObjectMapper objectMapper = new ObjectMapper();

        @Override
        public String convert(List<Option> options) {
            try {
                return objectMapper.writeValueAsString(options);
            } catch (JsonProcessingException e) {
                throw new DynamoDBMappingException("Error converting List<Option> to JSON string", e);
            }
        }

        @Override
        public List<Option> unconvert(String json) {
            try {
                return objectMapper.readValue(json, new TypeReference<List<Option>>() {});
            } catch (IOException e) {
                throw new DynamoDBMappingException("Error converting JSON string to List<Option>", e);
            }
        }
    }

}

plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.sonarqube" version '4.4.1.3373'
}

group = 'com.quemiztry.question_ms'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	testCompile {
		/* only junit 5 should be used */
		exclude group: 'junit', module: 'junit'
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testRuntime {
		/* only junit 5 should be used */
		exclude group: 'junit', module: 'junit'
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.12.725'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.github.derjust:spring-data-dynamodb:5.1.0'
	compileOnly 'org.projectlombok:lombok'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.required = true
	}

	afterEvaluate {
		excludedClassFilesForReport(classDirectories)
	}
}

private excludedClassFilesForReport(classDirectories) {
	classDirectories.setFrom(files(classDirectories.files.collect {
		fileTree(dir: it, exclude: [
				'**/entity/*.class',
				'**/model/**/*.class',
				'**/model/*.class',
				'**/entity/**/*.class',
				'**/Application.class',
				'**/constant/**/*.class',
				'**/constant/*.class'
		])
	}))
}

bootJar {
	archiveFileName = "question_ms.jar"
	archiveClassifier.set(null)
}

tasks.register('installLocalGitHook', Copy) {
	from new File(rootProject.rootDir, 'scripts/pre-commit')
	into { new File(rootProject.rootDir, '.git/hooks') }
	fileMode 0775
}

build {
	finalizedBy('installLocalGitHook')
}

sonar {
	properties {
		property "sonar.projectKey", "mtech-31-quemistry_question_ms"
		property "sonar.organization", "mtech-31-quemistry"
		property "sonar.host.url", "https://sonarcloud.io"
		property 'sonar.coverage.exclusions', "**/entity/**, **/model/**, **/Application*, **/constant/**, **/entity/**/**"
	}
}

